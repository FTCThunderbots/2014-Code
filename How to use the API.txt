How to use the API:

The following lines can be defined in any program. All of these lines are optional to make the program compile, but necessary if you want to use certain features of the API. Put these at the top of the program, directly below the configurations.

#define timersused 0
#define timersused 0
#define compass_name compass

If the first two lines are left out, they will default to zero. If your program uses a variable amount of timers, set the amount used to a high estimate, because very little extra memory is consumed before the timer or ruler is defined. The compass_name feild should be defined to the name of the compass sensor exactly as it appears in the configurations. Use similar settings for other sensor types.

This line is requried in all programs that use the API. Place it below your configuratinos, and below any optional settings that you've defined, but in front of any other part of your program.

#include "api.c"

The following line should be the very first line of your main task.

initializeAPI();

You're all set! Your program can now use any methods defined inside the API.

Better instructions for defining keyword:

1. configfile should be a string literal containing the file name of
the program's custom config file. To use the default config file,
simply don't include this line.

2. timersused should be an integer representing the maximum amount of
timer objects that the program will use. There can be more timers requested
here than the program actually uses, with very very little wasted memory
space

3. rulersused should be the same thing as timersused, but for ruler objects
instead of timer objects.

How to create a timer object:

Timer_t foo;
initTimer(&foo);
startTimer(&foo);
// after this, the timer will be running
// all functions should use the & (address of) operator on your timer object.
